#BlueJ class context
comment0.target=Elementos
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Elementos\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=coords\ room
comment1.target=Elementos(int[][],\ java.awt.Polygon)
comment1.text=\r\n\ Constructor\ de\ elementos\ del\ sal\u00F3n.\ \r\n
comment10.params=a\ b
comment10.target=boolean\ toMove(int[],\ int[])
comment10.text=\r\n\ metodo\ que\ decide\ cual\ es\ el\ vertice\ ideal\ para\ el\ movimiento\r\n\ @param\ a\ coordenadas\ del\ punto\ inicial\r\n\ @param\ b\ coordenadas\ del\ punto\ final\r\n\ @return\ true->\ si\ se\ puede\ mover\ o\ false->\ no\ se\ puede\ mover\r\n
comment2.params=
comment2.target=int[]\ getPosition()
comment3.params=xPoint\ yPoint
comment3.target=boolean\ contiene(double,\ double)
comment3.text=\r\n\ este\ metodo\ comprueba\ si\ un\ punto\ esta\ dentro\ del\ salon\ o\ en\ sus\ limites\r\n\ @param\ xPoint\ coordenada\ en\ el\ eje\ x\ del\ punto\ a\ analizar\r\n\ @param\ yPoint\ coordenada\ en\ el\ eje\ y\ del\ punto\ a\ analizar\r\n\ @return\ si\ esta\ contenido\ o\ no\r\n
comment4.params=xPoint\ yPoint
comment4.target=boolean\ isWall(double,\ double)
comment4.text=\r\n\ este\ metodo\ comprueba\ si\ un\ punto\ esta\ en\ los\ limites\ del\ salon\r\n\ @param\ xPoint\ coordenada\ en\ el\ eje\ x\ del\ punto\ a\ analizar\r\n\ @param\ yPoint\ coordenada\ en\ el\ eje\ y\ del\ punto\ a\ analizar\r\n\ @return\ si\ esta\ contenido\ o\ no\r\n
comment5.params=pointA\ pointB
comment5.target=boolean\ canSee(int[],\ int[])
comment5.text=\r\n\ este\ metodo\ evalua\ si\ desde\ la\ posicion\ del\ guardia\ puede\ ver\ un\ punto\r\n\ @param\ x\ coordenada\ en\ el\ eje\ x\ del\ punto\ a\ analizar\r\n\ @param\ y\ coordenada\ en\ el\ eje\ y\ del\ punto\ a\ analizar\r\n\ @return\ si\ lo\ \u00FAede\ ver\ o\ no\r\n
comment6.params=a\ b
comment6.target=int[]\ sumar(int[],\ int[])
comment6.text=\r\n\ suma\ dos\ fracciones\ y\ la\ retorna\ en\ forma\ simplificada\r\n\ @param\ a\ fraccion\ a\r\n\ @param\ b\ fraccion\ b\r\n\ @return\ suma\ de\ fracciones\ simplificado\r\n
comment7.params=a\ b
comment7.target=int[]\ pendiente(int[],\ int[])
comment7.text=\r\n\ este\ metodo\ calcula\ la\ pendiente\ de\ una\ recta\r\n\ @param\ x1\ coordenada\ en\ el\ eje\ x\ del\ punti\ inicial\r\n\ @param\ y1\ coordenada\ en\ el\ eje\ y\ del\ punti\ inicial\r\n\ @param\ x2\ coordenada\ en\ el\ eje\ x\ del\ punti\ final\r\n\ @param\ y2\ coordenada\ en\ el\ eje\ y\ del\ punti\ final\r\n\ @return\r\n
comment8.params=a\ b
comment8.target=int\ simplificar(int,\ int)
comment8.text=\r\n\ calcula\ el\ minimo\ comun\ multiplo\ de\ dos\ numeros\ para\ poder\ simplificar\r\n\ @param\ a\ numero\ a\r\n\ @param\ b\ numero\ b\r\n\ @return\ minimo\ comun\ multiplo\ entre\ a\ y\ b\r\n
comment9.params=ubicacion
comment9.target=verticesCerca(int[])
comment9.text=\r\n\ este\ metodo\ identifica\ los\ vertices\ cercanos\ \r\n\ @return\ el\ vertice\ al\ cual\ debe\ moverse\ el\ guardia\r\n
numComments=11
